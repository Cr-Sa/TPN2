// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TPN2.AccessData;

namespace TPN2.AccessData.Migrations
{
    [DbContext(typeof(CinedbContext))]
    partial class CinedbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TPN2.Domain.Entities.Funciones", b =>
                {
                    b.Property<int>("FuncionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Horario")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeliculaId")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("SalaId")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("FuncionId");

                    b.HasIndex("PeliculaId");

                    b.HasIndex("SalaId");

                    b.ToTable("Funciones");
                });

            modelBuilder.Entity("TPN2.Domain.Entities.Peliculas", b =>
                {
                    b.Property<int>("PeliculaId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Poster")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Sinopsis")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PeliculaId");

                    b.ToTable("Peliculas");

                    b.HasData(
                        new
                        {
                            PeliculaId = 1,
                            Poster = "https://es.web.img3.acsta.net/c_310_420/medias/nmedia/18/71/18/12/20061511.jpg",
                            Sinopsis = "Leia es capturada por las tropas imperiales, antes de ser atrapada logra colocar el mensaje en R2D2. Al llegar a Tattooine junto con C3PO son capturados y vendidos al joven Luke Skywalker, quien descubrirá el mensaje oculto para salvar a Leia.",
                            Titulo = "Star Wars:Episodio IV Una nueva esperanza",
                            Trailer = "https://youtu.be/_sQSHZ65fPI"
                        },
                        new
                        {
                            PeliculaId = 2,
                            Poster = "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcTAFLmt-Hfy6valTAd6sdWx0GcUYd-qS_Bkd4-Tk7_pGOa7DLEd",
                            Sinopsis = "Aunque la Estrella de la Muerte ha sido destruida, las tropas imperiales han hecho salir a las fuerzas rebeldes de sus bases ocultas y los persiguen a través de la galaxia. Mientras, el grupo de rebeldes de Skywalker se esconde en un planeta helado.",
                            Titulo = "Star Wars:Episodio V El imperio contraataca",
                            Trailer = "https://youtu.be/Cgj0Pr6Ubqs"
                        },
                        new
                        {
                            PeliculaId = 3,
                            Poster = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTXPU8__AsCs2FxSQ62Rn7I0OlCAFs_17nqY2sD_RGsMd2Y9uPF",
                            Sinopsis = "Luke Skywalker, ahora un experimentado caballero Jedi, intenta descubrir la identidad de Darth Vader.",
                            Titulo = "Star Wars:Episodio VI El retorno del Jedi",
                            Trailer = "https://youtu.be/Q4xMJxTaToQ"
                        },
                        new
                        {
                            PeliculaId = 4,
                            Poster = "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcRcSp3BcESE4TrXR3eaghjYYNfPWCVRtc-ATyQGZD-RHeDUd-zF",
                            Sinopsis = "Obi-Wan Kenobi es un joven aprendiz caballero Jedi bajo la tutela de Qui-Gon Jinn. Cuando la Federación de Comercio corta todas las rutas al planeta Naboo, Qui-Gon y Obi-Wan son asignados para solucionar el problema.",
                            Titulo = "Star Wars:Episodio I La amenaza fantasma",
                            Trailer = "https://youtu.be/L9ZgGEkH-yU"
                        },
                        new
                        {
                            PeliculaId = 5,
                            Poster = "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQpbOR5bkTGz0c69DSqWJYmU_GSJS3uIS0FiUOJG8B7QPlQD0vZ",
                            Sinopsis = "En el Senado Galáctico reina la inquietud. Varios miles de sistemas solares han declarado su intención de abandonar la República. La reina Amidala regresa al Senado para conseguir un ejército que ayude a los caballeros jedi.",
                            Titulo = "Star Wars:Episodio II El ataque de los clones",
                            Trailer = "https://youtu.be/KYcb9jSjcDc"
                        },
                        new
                        {
                            PeliculaId = 6,
                            Poster = "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcR2S6Cnnf2IyMWxxboeFEpd4M8S-fXQZ-bPPfgnUFRDe7O53uIw",
                            Sinopsis = "Seducido por el lado oscuro, Anakin Skywalker se rebela contra su mentor, Obi-Wan Kenobi, y se convierte en Darth Vader.",
                            Titulo = "Star Wars:Episodio III La venganza de los sith",
                            Trailer = "https://youtu.be/d3XN49jmmGM"
                        },
                        new
                        {
                            PeliculaId = 7,
                            Poster = "https://static.wikia.nocookie.net/esstarwars/images/2/2e/El_Despertar_de_la_Fuerza_Poster.jpg/revision/latest?cb=20180412014438",
                            Sinopsis = "El terrible y enigmático guerrero Kylo Ren ha reunido un nuevo ejército del Imperio, que se hace llamar la Primera Orden y ataca a la Alianza. La única esperanza para la galaxia es que Rey, Finn y BB-8 logren encontrar a tiempo a Luke Skywalker.",
                            Titulo = "Star Wars:Episodio VII El despertar de la fuerza",
                            Trailer = "https://youtu.be/EPkdiNHfF1U"
                        },
                        new
                        {
                            PeliculaId = 8,
                            Poster = "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcQCwbhD-mFerQzUo94bQvkzyS8yCyg7H4_Q8zxHInQGNN7JV92A",
                            Sinopsis = "La Primera Orden ha acorralado a los últimos miembros de la resistencia. Su última esperanza es que Finn se introduzca en la nave de Snoke y desactive el radar que les permite localizarlos. A su vez, Luke Skywalker se encuentra entrenando a Rey.",
                            Titulo = "Star Wars:Episodio VIII Los últimos Jedi",
                            Trailer = "https://youtu.be/EFNcvyWD4Ag"
                        },
                        new
                        {
                            PeliculaId = 9,
                            Poster = "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcT5T11lO5NUu09B5i37f3QC6VQVRMs2kkTrcwnYV9A3y--NUgI5",
                            Sinopsis = "Finn y Poe guían a la Resistencia para detener los planes de la Primera Orden para formar un nuevo imperio, mientras Rey anticipa un enfrentamiento inevitable con Kylo Ren.",
                            Titulo = "Star Wars:Episodio IX El ascenso de Skywalker",
                            Trailer = "https://youtu.be/o56ubcfwSzY"
                        },
                        new
                        {
                            PeliculaId = 10,
                            Poster = "https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcQ81FkPnEGE1MrMa3gm9_s644scRNJEMpKRvMgvBivM8qj3fGZ4",
                            Sinopsis = "El Imperio va a construir una estación espacial capaz de destruir planetas, conocida como la Estrella de la Muerte. Los rebeldes, conocedores de esto, se embarcan en una misión extraordinaria: robar los planos y sabotear la estación.",
                            Titulo = "Rogue One: una historia de Star Wars",
                            Trailer = "https://youtu.be/D47iksCvnRw"
                        });
                });

            modelBuilder.Entity("TPN2.Domain.Entities.Salas", b =>
                {
                    b.Property<int>("SalaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacidad")
                        .HasMaxLength(35)
                        .HasColumnType("int");

                    b.HasKey("SalaId");

                    b.ToTable("Salas");

                    b.HasData(
                        new
                        {
                            SalaId = 1,
                            Capacidad = 5
                        },
                        new
                        {
                            SalaId = 2,
                            Capacidad = 15
                        },
                        new
                        {
                            SalaId = 3,
                            Capacidad = 35
                        });
                });

            modelBuilder.Entity("TPN2.Domain.Entities.Tickets", b =>
                {
                    b.Property<Guid>("TicketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FuncionId")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TicketId", "FuncionId");

                    b.HasIndex("FuncionId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TPN2.Domain.Entities.Funciones", b =>
                {
                    b.HasOne("TPN2.Domain.Entities.Peliculas", "Pelicula")
                        .WithMany("Funciones")
                        .HasForeignKey("PeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TPN2.Domain.Entities.Salas", "Sala")
                        .WithMany("Funciones")
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pelicula");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("TPN2.Domain.Entities.Tickets", b =>
                {
                    b.HasOne("TPN2.Domain.Entities.Funciones", "Funcion")
                        .WithMany("Tickets")
                        .HasForeignKey("FuncionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcion");
                });

            modelBuilder.Entity("TPN2.Domain.Entities.Funciones", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("TPN2.Domain.Entities.Peliculas", b =>
                {
                    b.Navigation("Funciones");
                });

            modelBuilder.Entity("TPN2.Domain.Entities.Salas", b =>
                {
                    b.Navigation("Funciones");
                });
#pragma warning restore 612, 618
        }
    }
}
